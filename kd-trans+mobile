{"cells":[{"cell_type":"code","execution_count":1,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":134511,"status":"ok","timestamp":1709775467499,"user":{"displayName":"qing yang","userId":"18395643287176615289"},"user_tz":-480},"id":"cOZkLi4Biqsa","outputId":"39a2a641-75a2-4726-a33f-4d04376b65c3"},"outputs":[{"name":"stdout","output_type":"stream","text":["/bin/bash: line 1: google-drive-ocamlfuse: command not found\n","Mounted at /content/drive\n"]}],"source":["!mkdir -p drive\n","!google-drive-ocamlfuse drive\n","from google.colab import drive\n","drive.mount('/content/drive')\n","import os\n","os.chdir(\"drive/My Drive/2023kd\")"]},{"cell_type":"markdown","metadata":{"id":"dP9KwWmermiA"},"source":["Teacher"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"9uLBEVrCmCHb"},"outputs":[],"source":["!pip install tsai\n","!pip install torchviz"]},{"cell_type":"markdown","metadata":{"id":"1w0CaqaYpLvU"},"source":["DATA"]},{"cell_type":"code","execution_count":18,"metadata":{"executionInfo":{"elapsed":31854,"status":"ok","timestamp":1709778227041,"user":{"displayName":"qing yang","userId":"18395643287176615289"},"user_tz":-480},"id":"sP9T91uEpLJl"},"outputs":[],"source":["import numpy as np\n","import pandas as pd\n","import seaborn as sns\n","import matplotlib.pyplot as plt\n","from collections import Counter\n","from sklearn.model_selection import train_test_split\n","from sklearn.metrics import classification_report, confusion_matrix\n","from torchviz import make_dot\n","import torch\n","from fastcore.test import test_eq\n","from fastcore.basics import first\n","from fastai.data.external import untar_data, URLs\n","from fastai.tabular.data import TabularDataLoaders\n","from fastai.tabular.core import Categorify, FillMissing\n","from fastai.data.transforms import Normalize\n","\n","from tsai.all import *\n","from tsai.models.GatedTabTransformer import GatedTabTransformer\n","\n","data = pd.read_csv('mobilegt-unifeaturedata-oversampler-30w-extendf.csv')\n","x=data.iloc[:,:-1]\n","x.drop(x.columns[0], axis=1, inplace=True)\n","y=data.iloc[:,-1]\n","from sklearn.model_selection import train_test_split\n","X_train,X_test,y_train,y_test = train_test_split(x,y,stratify=y,random_state=40,test_size=0.3)\n","data = data.rename(columns={'35':'label'})\n","data.label = data.label.astype(str)\n","dls=TabularDataLoaders.from_df(data, path=\".\", y_names=\"label\",\n","    cat_names = ['0', '1','2','3','4','5','6','7','8','9',\n","                 '10','11','12','13','14','15','16','17','18',\n","                 '19','20','21','22','23','24',\n","                 '25','26','27','28','29','30',\n","                 '31','32','33','34'],\n","    procs = [Categorify, FillMissing, Normalize])"]},{"cell_type":"code","execution_count":19,"metadata":{"executionInfo":{"elapsed":5270,"status":"ok","timestamp":1709779028109,"user":{"displayName":"qing yang","userId":"18395643287176615289"},"user_tz":-480},"id":"NegZBeCyrOzl"},"outputs":[],"source":["import torch\n","import torch.nn as nn\n","import torch.optim as optim\n","from fastai.callback.all import *\n","from sklearn.metrics import precision_score, recall_score, f1_score\n","from fastai.metrics import *\n","from sklearn.metrics import precision_score, f1_score\n","def PrecisionMacro(*args, **kwargs):\n","    return AccumMetric(precision_score, dim_argmax=-1, average='macro', *args, **kwargs)\n","\n","def RecallMacro(*args, **kwargs):\n","    return AccumMetric(recall_score, dim_argmax=-1, average='macro', *args, **kwargs)\n","\n","def F1ScoreMacro(*args, **kwargs):\n","    return AccumMetric(f1_score, dim_argmax=-1, average='macro', *args, **kwargs)\n","\n","model = GatedTabTransformer(dls.classes,dls.cont_names,dls.c,mlp_d_model=32,mlp_d_ffn=64,mlp_layers=4)\n","learn = Learner(dls,model,cbs=ShowGraphCallback(),loss_func=CrossEntropyLossFlat(),metrics=[accuracy, PrecisionMacro(), RecallMacro(), F1ScoreMacro()])"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true,"base_uri":"https://localhost:8080/","height":174},"id":"SgdWt8Snrel6"},"outputs":[{"data":{"text/html":["\n","\u003cstyle\u003e\n","    /* Turns off some styling */\n","    progress {\n","        /* gets rid of default border in Firefox and Opera. */\n","        border: none;\n","        /* Needs to be in here for Safari polyfill so background images work as expected. */\n","        background-size: auto;\n","    }\n","    progress:not([value]), progress:not([value])::-webkit-progress-bar {\n","        background: repeating-linear-gradient(45deg, #7e7e7e, #7e7e7e 10px, #5c5c5c 10px, #5c5c5c 20px);\n","    }\n","    .progress-bar-interrupted, .progress-bar-interrupted::-webkit-progress-bar {\n","        background: #F44336;\n","    }\n","\u003c/style\u003e\n"],"text/plain":["\u003cIPython.core.display.HTML object\u003e"]},"metadata":{},"output_type":"display_data"},{"data":{"text/html":["\u003ctable border=\"1\" class=\"dataframe\"\u003e\n","  \u003cthead\u003e\n","    \u003ctr style=\"text-align: left;\"\u003e\n","      \u003cth\u003eepoch\u003c/th\u003e\n","      \u003cth\u003etrain_loss\u003c/th\u003e\n","      \u003cth\u003evalid_loss\u003c/th\u003e\n","      \u003cth\u003eaccuracy\u003c/th\u003e\n","      \u003cth\u003eprecision_score\u003c/th\u003e\n","      \u003cth\u003erecall_score\u003c/th\u003e\n","      \u003cth\u003ef1_score\u003c/th\u003e\n","      \u003cth\u003etime\u003c/th\u003e\n","    \u003c/tr\u003e\n","  \u003c/thead\u003e\n","  \u003ctbody\u003e\n","    \u003ctr\u003e\n","      \u003ctd\u003e0\u003c/td\u003e\n","      \u003ctd\u003e0.166598\u003c/td\u003e\n","      \u003ctd\u003e0.163555\u003c/td\u003e\n","      \u003ctd\u003e0.966992\u003c/td\u003e\n","      \u003ctd\u003e0.967088\u003c/td\u003e\n","      \u003ctd\u003e0.967170\u003c/td\u003e\n","      \u003ctd\u003e0.967073\u003c/td\u003e\n","      \u003ctd\u003e5:36:12\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003ctd\u003e1\u003c/td\u003e\n","      \u003ctd\u003e0.060988\u003c/td\u003e\n","      \u003ctd\u003e0.173725\u003c/td\u003e\n","      \u003ctd\u003e0.962631\u003c/td\u003e\n","      \u003ctd\u003e0.962694\u003c/td\u003e\n","      \u003ctd\u003e0.963140\u003c/td\u003e\n","      \u003ctd\u003e0.962794\u003c/td\u003e\n","      \u003ctd\u003e6:34:06\u003c/td\u003e\n","    \u003c/tr\u003e\n","  \u003c/tbody\u003e\n","\u003c/table\u003e"],"text/plain":["\u003cIPython.core.display.HTML object\u003e"]},"metadata":{},"output_type":"display_data"},{"data":{"image/png":"\n","text/plain":["\u003cFigure size 600x400 with 1 Axes\u003e"]},"metadata":{},"output_type":"display_data"},{"data":{"text/plain":["Path('models/Tabtrans_3-7.pth.pth')"]},"execution_count":20,"metadata":{},"output_type":"execute_result"}],"source":["learn.fit_one_cycle(2,1e-3)#\n","learn.save('Tabtrans_3-7.pth')#"]}],"metadata":{"colab":{"authorship_tag":"ABX9TyNFiB21jkpb2Jx96181JHGz","name":"","version":""},"kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"}},"nbformat":4,"nbformat_minor":0}