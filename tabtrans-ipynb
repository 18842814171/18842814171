{"cells":[{"cell_type":"code","execution_count":1,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":26027,"status":"ok","timestamp":1709437705898,"user":{"displayName":"qing yang","userId":"18395643287176615289"},"user_tz":-480},"id":"dxiDZYVmYht0","outputId":"0a9255a9-66de-4a33-e3cf-9919d1676836"},"outputs":[{"name":"stdout","output_type":"stream","text":["/bin/bash: line 1: google-drive-ocamlfuse: command not found\n","Mounted at /content/drive\n"]}],"source":["!mkdir -p drive\n","!google-drive-ocamlfuse drive\n","from google.colab import drive\n","drive.mount('/content/drive')\n","import os\n","# 此处为google drive中的文件路径,drive为之前指定的工作根目录，要加上\n","os.chdir(\"drive/My Drive/2023kd\")"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"muI2dl9gaMC9"},"outputs":[],"source":["!pip install torchviz"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"36ROQbdKaTDL"},"outputs":[],"source":["!pip install tsai"]},{"cell_type":"code","execution_count":4,"metadata":{"executionInfo":{"elapsed":14035,"status":"ok","timestamp":1709437748507,"user":{"displayName":"qing yang","userId":"18395643287176615289"},"user_tz":-480},"id":"pjpM0Qr8aH6M"},"outputs":[],"source":["import numpy as np\n","import pandas as pd\n","import seaborn as sns\n","import matplotlib.pyplot as plt\n","from collections import Counter\n","from sklearn.model_selection import train_test_split\n","from sklearn.metrics import classification_report, confusion_matrix\n","from torchviz import make_dot\n","\n","from fastcore.test import test_eq\n","from fastcore.basics import first\n","from fastai.data.external import untar_data, URLs\n","from fastai.tabular.data import TabularDataLoaders\n","from fastai.tabular.core import Categorify, FillMissing\n","from fastai.data.transforms import Normalize\n","\n","from tsai.all import *\n","from tsai.models.GatedTabTransformer import GatedTabTransformer\n","\n","import warnings\n","warnings.filterwarnings('ignore')"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"mWInUAIial-r"},"outputs":[],"source":["%matplotlib inline"]},{"cell_type":"code","execution_count":40,"metadata":{"executionInfo":{"elapsed":2969,"status":"ok","timestamp":1709441365178,"user":{"displayName":"qing yang","userId":"18395643287176615289"},"user_tz":-480},"id":"4lshJRLZoCNO"},"outputs":[],"source":["data = pd.read_csv('mobilegt-unifeaturedata-oversampler-30w-extendf.csv')"]},{"cell_type":"code","execution_count":27,"metadata":{"executionInfo":{"elapsed":511,"status":"ok","timestamp":1709441084583,"user":{"displayName":"qing yang","userId":"18395643287176615289"},"user_tz":-480},"id":"2v6GlM_Jaqhz"},"outputs":[],"source":["data = pd.read_csv('mobile-all-smote.csv')\n","#mobilegt-unifeaturedata-oversampler-30w-extendf.csv"]},{"cell_type":"code","execution_count":41,"metadata":{"executionInfo":{"elapsed":449,"status":"ok","timestamp":1709441368402,"user":{"displayName":"qing yang","userId":"18395643287176615289"},"user_tz":-480},"id":"-Kj3NfzgTu_T"},"outputs":[],"source":["data = data.rename(columns={'35':'label'})"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"ikSeAWfOpMJk"},"outputs":[],"source":["data"]},{"cell_type":"code","execution_count":42,"metadata":{"executionInfo":{"elapsed":2,"status":"ok","timestamp":1709441370489,"user":{"displayName":"qing yang","userId":"18395643287176615289"},"user_tz":-480},"id":"0lP9LT4r_Kf3"},"outputs":[],"source":["x=data.iloc[:,:-1]\n","x.drop(x.columns[0], axis=1, inplace=True)\n","y=data.iloc[:,-1]\n","from sklearn.model_selection import train_test_split\n","X_train,X_test,y_train,y_test = train_test_split(x,y,stratify=y,random_state=40,test_size=0.3)\n","y_test = list(y_test)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"BZ46g_Gy__cj"},"outputs":[],"source":["x,y"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"VhA8er_Ta0UD"},"outputs":[],"source":["heat_map_features = data\n","plt.figure(figsize=(15,12.5))\n","sns.heatmap(round(heat_map_features.corr(),1),annot=True,cmap='Blues',linewidth=0.9)\n","plt.show()"]},{"cell_type":"code","execution_count":47,"metadata":{"executionInfo":{"elapsed":7894,"status":"ok","timestamp":1709441570533,"user":{"displayName":"qing yang","userId":"18395643287176615289"},"user_tz":-480},"id":"2pn05PpWdobM"},"outputs":[],"source":["data.label = data.label.astype(str)\n","dls=TabularDataLoaders.from_df(data, path=\".\", y_names=\"label\",\n","    cat_names = ['0', '1','2','3','4','5','6','7','8','9',\n","                 '10','11','12','13','14','15','16','17','18',\n","                 '19','20','21','22','23','24',\n","                 '25','26','27','28','29','30',\n","                 '31','32','33','34'],\n","    procs = [Categorify, FillMissing, Normalize])"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"wl5yZ7jKqh4D"},"outputs":[],"source":["dls.c"]},{"cell_type":"code","execution_count":46,"metadata":{"executionInfo":{"elapsed":2,"status":"ok","timestamp":1709441404845,"user":{"displayName":"qing yang","userId":"18395643287176615289"},"user_tz":-480},"id":"C8peboTuNgcj"},"outputs":[],"source":["my_array = np.array(y_train)\n","x_categ = torch.tensor(my_array)\n","x_categ = x_categ.view(1,len(y_train))\n","x_categ = x_categ.int()"]},{"cell_type":"code","execution_count":49,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":443,"status":"ok","timestamp":1709441579046,"user":{"displayName":"qing yang","userId":"18395643287176615289"},"user_tz":-480},"id":"zAfQsv-ETZpm","outputId":"d03573eb-5325-44b5-e031-e09cce56f3ad"},"outputs":[{"data":{"text/plain":["(torch.Size([1, 214300]),\n"," tensor([[7, 5, 3,  ..., 9, 3, 4]], dtype=torch.int32))"]},"execution_count":49,"metadata":{},"output_type":"execute_result"}],"source":["x_categ.size(),x_categ"]},{"cell_type":"code","execution_count":50,"metadata":{"executionInfo":{"elapsed":3120,"status":"ok","timestamp":1709441587433,"user":{"displayName":"qing yang","userId":"18395643287176615289"},"user_tz":-480},"id":"LTonwtQlqX8k"},"outputs":[],"source":["import torch\n","import torch.nn as nn\n","import torch.optim as optim\n","from fastai.callback.all import *\n","from sklearn.metrics import precision_score, recall_score, f1_score\n","from fastai.metrics import *\n","from sklearn.metrics import precision_score, f1_score\n","def PrecisionMacro(*args, **kwargs):\n","    return AccumMetric(precision_score, dim_argmax=-1, average='macro', *args, **kwargs)\n","\n","def RecallMacro(*args, **kwargs):\n","    return AccumMetric(recall_score, dim_argmax=-1, average='macro', *args, **kwargs)\n","\n","def F1ScoreMacro(*args, **kwargs):\n","    return AccumMetric(f1_score, dim_argmax=-1, average='macro', *args, **kwargs)\n","\n","model = GatedTabTransformer(dls.classes,dls.cont_names,dls.c,mlp_d_model=32,mlp_d_ffn=64,mlp_layers=4)\n","learn = Learner(dls,model,cbs=ShowGraphCallback(),loss_func=CrossEntropyLossFlat(),metrics=[accuracy, PrecisionMacro(), RecallMacro(), F1ScoreMacro()])"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true,"base_uri":"https://localhost:8080/","height":509},"id":"7BR3j1u8gVJG"},"outputs":[{"data":{"text/html":["\n","\u003cstyle\u003e\n","    /* Turns off some styling */\n","    progress {\n","        /* gets rid of default border in Firefox and Opera. */\n","        border: none;\n","        /* Needs to be in here for Safari polyfill so background images work as expected. */\n","        background-size: auto;\n","    }\n","    progress:not([value]), progress:not([value])::-webkit-progress-bar {\n","        background: repeating-linear-gradient(45deg, #7e7e7e, #7e7e7e 10px, #5c5c5c 10px, #5c5c5c 20px);\n","    }\n","    .progress-bar-interrupted, .progress-bar-interrupted::-webkit-progress-bar {\n","        background: #F44336;\n","    }\n","\u003c/style\u003e\n"],"text/plain":["\u003cIPython.core.display.HTML object\u003e"]},"metadata":{},"output_type":"display_data"},{"data":{"text/html":["\n","    \u003cdiv\u003e\n","      \u003cprogress value='3' class='' max='10' style='width:300px; height:20px; vertical-align: middle;'\u003e\u003c/progress\u003e\n","      30.00% [3/10 28:59\u0026lt;1:07:39]\n","    \u003c/div\u003e\n","    \n","\u003ctable border=\"1\" class=\"dataframe\"\u003e\n","  \u003cthead\u003e\n","    \u003ctr style=\"text-align: left;\"\u003e\n","      \u003cth\u003eepoch\u003c/th\u003e\n","      \u003cth\u003etrain_loss\u003c/th\u003e\n","      \u003cth\u003evalid_loss\u003c/th\u003e\n","      \u003cth\u003eaccuracy\u003c/th\u003e\n","      \u003cth\u003eprecision_score\u003c/th\u003e\n","      \u003cth\u003erecall_score\u003c/th\u003e\n","      \u003cth\u003ef1_score\u003c/th\u003e\n","      \u003cth\u003etime\u003c/th\u003e\n","    \u003c/tr\u003e\n","  \u003c/thead\u003e\n","  \u003ctbody\u003e\n","    \u003ctr\u003e\n","      \u003ctd\u003e0\u003c/td\u003e\n","      \u003ctd\u003e0.188139\u003c/td\u003e\n","      \u003ctd\u003e0.185367\u003c/td\u003e\n","      \u003ctd\u003e0.965212\u003c/td\u003e\n","      \u003ctd\u003e0.965359\u003c/td\u003e\n","      \u003ctd\u003e0.965415\u003c/td\u003e\n","      \u003ctd\u003e0.965332\u003c/td\u003e\n","      \u003ctd\u003e09:36\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003ctd\u003e1\u003c/td\u003e\n","      \u003ctd\u003e0.141754\u003c/td\u003e\n","      \u003ctd\u003e0.200829\u003c/td\u003e\n","      \u003ctd\u003e0.960688\u003c/td\u003e\n","      \u003ctd\u003e0.960892\u003c/td\u003e\n","      \u003ctd\u003e0.961131\u003c/td\u003e\n","      \u003ctd\u003e0.960915\u003c/td\u003e\n","      \u003ctd\u003e09:40\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003ctd\u003e2\u003c/td\u003e\n","      \u003ctd\u003e0.047888\u003c/td\u003e\n","      \u003ctd\u003e0.293392\u003c/td\u003e\n","      \u003ctd\u003e0.924724\u003c/td\u003e\n","      \u003ctd\u003e0.925549\u003c/td\u003e\n","      \u003ctd\u003e0.937498\u003c/td\u003e\n","      \u003ctd\u003e0.924476\u003c/td\u003e\n","      \u003ctd\u003e09:40\u003c/td\u003e\n","    \u003c/tr\u003e\n","  \u003c/tbody\u003e\n","\u003c/table\u003e\u003cp\u003e\n","\n","    \u003cdiv\u003e\n","      \u003cprogress value='3320' class='' max='3826' style='width:300px; height:20px; vertical-align: middle;'\u003e\u003c/progress\u003e\n","      86.77% [3320/3826 07:52\u0026lt;01:12 0.0060]\n","    \u003c/div\u003e\n","    "],"text/plain":["\u003cIPython.core.display.HTML object\u003e"]},"metadata":{},"output_type":"display_data"},{"data":{"image/png":"\n","text/plain":["\u003cFigure size 600x400 with 1 Axes\u003e"]},"metadata":{},"output_type":"display_data"}],"source":["learn.fit_one_cycle(10,1e-3)#\n","learn.save('Tabtrans_3-3')#"]},{"cell_type":"markdown","metadata":{"id":"8zqcfBJNBfxw"},"source":["Mobilenetv3"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":468,"status":"ok","timestamp":1685339239077,"user":{"displayName":"qing yang","userId":"18395643287176615289"},"user_tz":-480},"id":"Pzo388HO8Kdd","outputId":"269484d7-2647-4ce2-cb26-865ed2bb072c"},"outputs":[{"data":{"text/plain":["\u003cbound method Learner.get_preds of \u003cfastai.learner.Learner object at 0x7fcaadcf8af0\u003e\u003e"]},"execution_count":50,"metadata":{},"output_type":"execute_result"}],"source":["from fastai.vision.all import *\n","import torchvision.models as models\n","from tsai.all import *\n","from fastai.learner import Learner\n","from fastai.metrics import accuracy, F1Score, Precision, Recall\n","\n","mobilenetv3 = models.mobilenet_v3_large(pretrained=True)  # 根据需要选择预训练或自定义版本\n","mobilenetv3.classifier[3] = nn.Linear(in_features=mobilenetv3.classifier[3].in_features, out_features=dls.c)  # 调整最后一层以匹配你的分类任务\n","\n","# 使用tsai的Learner\n","learn = Learner(dls,\n","                mobilenetv3,\n","                metrics=[accuracy, F1Score(average='macro'), Precision(average='macro'), Recall(average='macro')],\n","                cbs=ShowGraphCallback(),\n","                loss_func=CrossEntropyLossFlat())\n","\n","# 训练模型\n","learn.fit_one_cycle(100, 1e-3)\n"]}],"metadata":{"accelerator":"GPU","colab":{"authorship_tag":"ABX9TyP4Uklz/Z9MyP61zs+0vhpI","gpuType":"T4","name":"","version":""},"kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"}},"nbformat":4,"nbformat_minor":0}